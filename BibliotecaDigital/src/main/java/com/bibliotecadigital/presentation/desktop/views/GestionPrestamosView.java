/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.bibliotecadigital.presentation.desktop.views;

import com.bibliotecadigital.domain.model.MaterialBiblioteca;
import com.bibliotecadigital.domain.model.Prestamo;
import com.bibliotecadigital.presentation.desktop.controllers.GestionPrestamosController;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionListener;
import java.time.format.DateTimeFormatter;
import java.util.List;

public class GestionPrestamosView extends javax.swing.JFrame implements GestionPrestamosViewInterface {
    
    private GestionPrestamosController controller;
    private DefaultTableModel prestamosModel;

    /**
     * Creates new form GestionPrestamosView
     */
    public GestionPrestamosView() {
        initComponents();
        
        // Configuración adicional
        setSize(900, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        // Crear modelo de tabla no editable
        prestamosModel = new DefaultTableModel(
            new Object [][] {},
            new String [] {
                "ID", "Usuario", "Fecha Préstamo", "Fecha Devolución", "Materiales"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        prestamosTable.setModel(prestamosModel);
        
      
    }
    
    /**
     * Establece el controlador para esta vista
     * @param controller Controlador de préstamos
     */
    public void setController(GestionPrestamosController controller) {
        this.controller = controller;
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prestamosTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnNuevoPrestamo = new javax.swing.JButton();
        btnFinalizarPrestamo = new javax.swing.JButton();
        btnRefrescar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestión de Préstamos");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestión de Préstamos");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        prestamosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Usuario", "Fecha Préstamo", "Fecha Devolución", "Materiales"
            }
        ));
        prestamosTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(prestamosTable);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        btnNuevoPrestamo.setText("Nuevo Préstamo");
        jPanel1.add(btnNuevoPrestamo);

        btnFinalizarPrestamo.setText("Finalizar Préstamo");
        jPanel1.add(btnFinalizarPrestamo);

        btnRefrescar.setText("Actualizar");
        jPanel1.add(btnRefrescar);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Implementación de GestionPrestamosViewInterface
    
    @Override
    public void addNuevoPrestamoListener(ActionListener listener) {
        btnNuevoPrestamo.addActionListener(listener);
    }
    
    @Override
    public void addFinalizarPrestamoListener(ActionListener listener) {
        btnFinalizarPrestamo.addActionListener(listener);
    }
    
    @Override
    public void addRefrescarListener(ActionListener listener) {
        btnRefrescar.addActionListener(listener);
    }
    
    @Override
    public void mostrarPrestamos(List<Prestamo> prestamos) {
        // Limpiar tabla
        prestamosModel.setRowCount(0);
        
        // Formato para fechas
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        // Llenar tabla con préstamos
        for (Prestamo prestamo : prestamos) {
            String fechaPrestamo = prestamo.getFechaPrestamo() != null ? 
                prestamo.getFechaPrestamo().format(dateFormatter) : "No registrada";
                
            String fechaDevolucion = prestamo.getFechaDevolucion() != null ? 
                prestamo.getFechaDevolucion().format(dateFormatter) : "Pendiente";
                
            // Formar la lista de materiales
            StringBuilder materialesStr = new StringBuilder();
            List<MaterialBiblioteca> materiales = prestamo.getMateriales();
            if (materiales != null && !materiales.isEmpty()) {
                for (int i = 0; i < materiales.size(); i++) {
                    if (i > 0) {
                        materialesStr.append(", ");
                    }
                    materialesStr.append(materiales.get(i).getTitulo());
                }
            } else {
                materialesStr.append("Sin materiales");
            }
            
            prestamosModel.addRow(new Object[]{
                prestamo.getId(),
                prestamo.getUsuario() != null ? prestamo.getUsuario().getNombre() : "Desconocido",
                fechaPrestamo,
                fechaDevolucion,
                materialesStr.toString()
            });
        }
    }
    
    @Override
    public void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Información", JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    @Override
    public Prestamo getPrestamoSeleccionado() {
        int filaSeleccionada = prestamosTable.getSelectedRow();
        if (filaSeleccionada == -1) {
            return null;
        }

        // En este punto solo tenemos el ID del préstamo seleccionado
        int id = (Integer) prestamosModel.getValueAt(filaSeleccionada, 0);

        // Utilizar el controlador para buscar el préstamo completo
        return controller != null ? controller.buscarPrestamoPorId(id) : null;
    }
    
    @Override
    public void abrirDialogoNuevoPrestamo() {
        // Aquí pasamos 'this.controller' al constructor del diálogo
        NuevoPrestamoDialog dialog = new NuevoPrestamoDialog(this, this.controller);
        dialog.setVisible(true);
    }
    
    @Override
    public boolean confirmarFinalizacionPrestamo(Prestamo prestamo) {
        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de finalizar el préstamo seleccionado?",
            "Confirmar finalización",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );
        
        return opcion == JOptionPane.YES_OPTION;
    }
    
    @Override
    public JFrame getFrame() {
        return this;
    }
    
    @Override
    public void actualizarListaPrestamos() {
        if (controller != null) {
            controller.cargarPrestamos();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionPrestamosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionPrestamosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionPrestamosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionPrestamosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionPrestamosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinalizarPrestamo;
    private javax.swing.JButton btnNuevoPrestamo;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable prestamosTable;
    // End of variables declaration//GEN-END:variables
}
