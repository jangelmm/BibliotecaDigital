/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.bibliotecadigital.presentation.desktop.views;

import com.bibliotecadigital.domain.model.RolUsuario;
import com.bibliotecadigital.domain.model.Usuario;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp EliteBook
 */
public class GestionUsuariosView extends javax.swing.JFrame implements GestionUsuariosViewInterface {
    
    private DefaultTableModel modelo;
    private List<Usuario> listaUsuarios = new ArrayList<>();
    
    /**
     * Creates new form GestionUsuariosView
     */
    public GestionUsuariosView() {
        initComponents();
        modelo = new DefaultTableModel(new String[]{"id","Nombre","Email","Rol"},0);
        tablaUsuarios.setModel(modelo); // Tabla con el modelo
        tablaUsuarios.setDefaultEditor(Object.class, null); // bloquea edici√≥n
    } 
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        panelBotones = new javax.swing.JPanel();
        agregarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        modificarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion de Usuarios");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        getContentPane().add(jScrollPane1);

        panelBotones.setLayout(new java.awt.GridLayout());

        agregarButton.setText("Agregar ");
        panelBotones.add(agregarButton);

        eliminarButton.setText("Eliminar");
        panelBotones.add(eliminarButton);

        modificarButton.setText("Modificar");
        panelBotones.add(modificarButton);

        getContentPane().add(panelBotones);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionUsuariosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarButton;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addCrearListener(ActionListener listener) {
        agregarButton.addActionListener(listener);
    }

    @Override
    public void addModificarListener(ActionListener listener) {
        modificarButton.addActionListener(listener);
    }

    @Override
    public void addEliminarListener(ActionListener listener) {
        eliminarButton.addActionListener(listener);
    }
    
    @Override
    public void mostrarUsuarios(List<Usuario> usuarios) {
        this.listaUsuarios = usuarios;  // üîπ Mantener sincronizada la lista
        DefaultTableModel modelo = (DefaultTableModel) tablaUsuarios.getModel();
        modelo.setRowCount(0); // Limpia la tabla

        for (Usuario u : usuarios) {
            modelo.addRow(new Object[]{
                u.getId(),
                u.getNombre(),
                u.getEmail(),
                u.getRol()
            });
        }
    }
    @Override
    public void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje);
    }

    @Override
    public Usuario getUsuarioSeleccionado() {
        int fila = tablaUsuarios.getSelectedRow();
        if (fila >= 0 && listaUsuarios != null && fila < listaUsuarios.size()) {
            return listaUsuarios.get(fila);
        }
        return null;
    }

    @Override
    public String pedirNuevoNombreUsuario(String nombreActual) {
        return JOptionPane.showInputDialog(this, "Nuevo nombre:", nombreActual);
    }

    @Override
    public boolean confirmarEliminacion(String nombreUsuario) {
        int opcion = JOptionPane.showConfirmDialog(this, 
            "¬øEliminar usuario " + nombreUsuario + "?", 
            "Confirmar", 
            JOptionPane.YES_NO_OPTION);
        return opcion == JOptionPane.YES_OPTION;
    }

    @Override
    public JFrame getFrame() {
        return this; // el JFrame en s√≠ mismo
    }

    @Override
    public void setVisible(boolean visible) {
        super.setVisible(visible);
    }
    
    public class NuevoUsuarioDialog extends JDialog {
        private JTextField txtNombre, txtEmail;
        private JPasswordField txtPassword;
        private JComboBox<RolUsuario> comboRol;
        private Usuario usuarioCreado;

        public NuevoUsuarioDialog(JFrame parent) {
            super(parent,"Nuevo Usuario", true);
            setLayout(new GridLayout(5,2,5,5));
            setSize(300,250);
            setLocationRelativeTo(parent);

            add(new JLabel("Nombre:")); txtNombre = new JTextField(); add(txtNombre);
            add(new JLabel("Email:")); txtEmail = new JTextField(); add(txtEmail);
            add(new JLabel("Contrase√±a:")); txtPassword = new JPasswordField(); add(txtPassword);
            add(new JLabel("Rol:")); comboRol = new JComboBox<>(RolUsuario.values()); add(comboRol);

            JButton btnGuardar = new JButton("Guardar");
            JButton btnCancelar = new JButton("Cancelar");
            add(btnGuardar); add(btnCancelar);

            btnGuardar.addActionListener(e -> {
                String nombre = txtNombre.getText().trim();
                String email = txtEmail.getText().trim();
                String password = new String(txtPassword.getPassword()).trim();
                RolUsuario rol = (RolUsuario) comboRol.getSelectedItem();

                if(nombre.isEmpty() || email.isEmpty() || password.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.");
                    return;
                }

                usuarioCreado = new Usuario(nombre, email, password, rol);
                dispose(); // cierra el di√°logo
            });

            btnCancelar.addActionListener(e -> {
                usuarioCreado = null;
                dispose();
            });
        }

        public Usuario getUsuarioCreado() { return usuarioCreado; }
    }

    public class EditarUsuarioDialog extends JDialog {
        private JTextField txtNombre, txtEmail;
        private JComboBox<RolUsuario> comboRol;
        private Usuario usuarioEditado;

        public EditarUsuarioDialog(JFrame parent, Usuario usuario) {
            super(parent, "Editar Usuario", true);
            setSize(300, 200);
            setLocationRelativeTo(parent);
            setLayout(new GridLayout(4, 2, 5, 5));

            usuarioEditado = usuario;

            add(new JLabel("Nombre:")); txtNombre = new JTextField(usuario.getNombre()); add(txtNombre);
            add(new JLabel("Gmail:")); txtEmail = new JTextField(usuario.getEmail()); add(txtEmail);
            add(new JLabel("Rol:")); comboRol = new JComboBox<>(RolUsuario.values()); comboRol.setSelectedItem(usuario.getRol()); add(comboRol);

            JButton btnGuardar = new JButton("Guardar");
            JButton btnCancelar = new JButton("Cancelar");
            add(btnGuardar); add(btnCancelar);

            btnGuardar.addActionListener(e -> {
                usuarioEditado.setNombre(txtNombre.getText());
                usuarioEditado.setEmail(txtEmail.getText());
                usuarioEditado.setRol((RolUsuario)comboRol.getSelectedItem());
                dispose();
            });

            btnCancelar.addActionListener(e -> dispose());
        }

        public Usuario getUsuarioEditado() { return usuarioEditado; }
    }

    public class DetalleUsuarioDialog extends JDialog {
        public DetalleUsuarioDialog(JFrame parent, Usuario usuario) {
            super(parent,"Detalle Usuario", true);
            setLayout(new GridLayout(3,2,5,5));
            setSize(300,150);
            setLocationRelativeTo(parent);

            add(new JLabel("Nombre:")); add(new JLabel(usuario.getNombre()));
            add(new JLabel("Email:")); add(new JLabel(usuario.getEmail()));
            add(new JLabel("Rol:")); add(new JLabel(usuario.getRol().name()));

            JButton btnCerrar = new JButton("Cerrar");
            add(btnCerrar);
            btnCerrar.addActionListener(e -> dispose());
        }
    }

}
